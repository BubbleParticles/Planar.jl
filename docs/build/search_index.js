var documenterSearchIndex = {"docs":
[{"location":"exchanges/#Exchanges","page":"Exchanges","title":"Exchanges","text":"","category":"section"},{"location":"exchanges/","page":"Exchanges","title":"Exchanges","text":"Modules = [Backtest.Exchanges]\nPages = [\"exchanges.jl\", \"-data.jl\"]","category":"page"},{"location":"exchanges/#Exchanges.aprice-Tuple{Any}","page":"Exchanges","title":"Exchanges.aprice","text":"Get price from ticker.\n\n\n\n\n\n","category":"method"},{"location":"exchanges/#Exchanges.as_spot_ticker-Tuple{Any, Any}","page":"Exchanges","title":"Exchanges.as_spot_ticker","text":"Trims the settlement currency in futures.\n\n\n\n\n\n","category":"method"},{"location":"exchanges/#Exchanges.deleverage_pair-Tuple{Any}","page":"Exchanges","title":"Exchanges.deleverage_pair","text":"Remove leveraged pair pre/suffixes from base currency.\n\n\n\n\n\n","category":"method"},{"location":"exchanges/#Exchanges.get_markets-Tuple{Any}","page":"Exchanges","title":"Exchanges.get_markets","text":"Get the the markets of the ccxt instance, according to min_volume and quote currency.\n\n\n\n\n\n","category":"method"},{"location":"exchanges/#Exchanges.get_pairlist-Tuple{Exchange, String, Float64}","page":"Exchanges","title":"Exchanges.get_pairlist","text":"Get the exchange pairlist. quot: Only choose pairs where the quot currency equals quot. min_vol: The minimum volume of each pair. skip_fiat: Ignore fiat/fiat pairs. margin: Only choose pairs enabled for margin trading. leveraged: If :no skip all pairs where the base currency matches the leverage_pair_rgx regex. as_vec: Returns the pairlist as a Vector instead of as a Dict.\n\n\n\n\n\n","category":"method"},{"location":"exchanges/#Exchanges.getexchange-Tuple{Symbol}","page":"Exchanges","title":"Exchanges.getexchange","text":"Get ccxt exchange by symbol.\n\n\n\n\n\n","category":"method"},{"location":"exchanges/#Exchanges.hastickers-Tuple{Exchange}","page":"Exchanges","title":"Exchanges.hastickers","text":"Check if exchange has tickers list.\n\n\n\n\n\n","category":"method"},{"location":"exchanges/#Exchanges.is_fiat_pair-Tuple{Any}","page":"Exchanges","title":"Exchanges.is_fiat_pair","text":"Check if both base and quote are fiat currencies.\n\n\n\n\n\n","category":"method"},{"location":"exchanges/#Exchanges.is_leveraged_pair-Tuple{Any}","page":"Exchanges","title":"Exchanges.is_leveraged_pair","text":"Test if pair has leveraged naming.\n\n\n\n\n\n","category":"method"},{"location":"exchanges/#Exchanges.loadmarkets!-Tuple{Any}","page":"Exchanges","title":"Exchanges.loadmarkets!","text":"Load exchange markets:\n\ncache: rely on storage cache\nagemax: max cache valid period [1 day].\n\n\n\n\n\n","category":"method"},{"location":"exchanges/#Exchanges.price_ranges-Tuple{AbstractString, Vararg{Any}}","page":"Exchanges","title":"Exchanges.price_ranges","text":"Get price ranges using tickers data from exchange.\n\n\n\n\n\n","category":"method"},{"location":"exchanges/#Exchanges.pyexchange","page":"Exchanges","title":"Exchanges.pyexchange","text":"\n\n\n\n","category":"function"},{"location":"exchanges/#Exchanges.sanitize_pair-Tuple{AbstractString}","page":"Exchanges","title":"Exchanges.sanitize_pair","text":"Normalizes or special characthers separators to _.\n\n\n\n\n\n","category":"method"},{"location":"exchanges/#Exchanges.setexchange!-Tuple{Exchange, Symbol, Vararg{Any}}","page":"Exchanges","title":"Exchanges.setexchange!","text":"Instantiate an exchange struct. it sets:\n\nThe matching ccxt class.\nPre-emptively loads the markets.\nSets the exchange timeframes.\nSets exchange api keys.\n\n\n\n\n\n","category":"method"},{"location":"exchanges/#Exchanges.@exchange!-Tuple{Any}","page":"Exchanges","title":"Exchanges.@exchange!","text":"Define an exchange variable set to its matching exchange instance.\n\n\n\n\n\n","category":"macro"},{"location":"exchanges/#Exchanges.@tickers","page":"Exchanges","title":"Exchanges.@tickers","text":"Fetch and cache tickers data.\n\n\n\n\n\n","category":"macro"},{"location":"exchanges/#Data","page":"Exchanges","title":"Data","text":"","category":"section"},{"location":"exchanges/","page":"Exchanges","title":"Exchanges","text":"Extensions for the top level Data module.","category":"page"},{"location":"exchanges/","page":"Exchanges","title":"Exchanges","text":"Modules = [Backtest.Exchanges]\nPages = [\"data.jl\"]","category":"page"},{"location":"exchanges/#Data.load_pairs-Tuple{}","page":"Exchanges","title":"Data.load_pairs","text":"Load all pairs from exchange according to config quote currency and timeframe.\n\n\n\n\n\n","category":"method"},{"location":"exchanges/#Data.save_pair-Tuple{Any, Any, Any}","page":"Exchanges","title":"Data.save_pair","text":"Updates pair data of the globally set exchange.\n\n\n\n\n\n","category":"method"},{"location":"exchanges/#Fetching","page":"Exchanges","title":"Fetching","text":"","category":"section"},{"location":"exchanges/","page":"Exchanges","title":"Exchanges","text":"Helper module for downloading data off exchanges.","category":"page"},{"location":"exchanges/","page":"Exchanges","title":"Exchanges","text":"Modules = [Fetch]","category":"page"},{"location":"exchanges/#Main.Fetch.fetch_pairs-Tuple{Vector, Any}","page":"Exchanges","title":"Main.Fetch.fetch_pairs","text":"Fetch ohlcv data for multiple exchanges on the same timeframe. It accepts:     - a mapping of exchange instances to pairlists.     - a vector of symbols for which an exchange instance will be instantiated for each element,       and pairlist will be composed according to quote currency and min_volume from Backtest.config.\n\n\n\n\n\n","category":"method"},{"location":"misc/#Misc","page":"Misc","title":"Misc","text":"","category":"section"},{"location":"misc/","page":"Misc","title":"Misc","text":"Modules = [Backtest.Misc]","category":"page"},{"location":"misc/#Misc.config","page":"Misc","title":"Misc.config","text":"Global configuration instance.\n\n\n\n\n\n","category":"constant"},{"location":"misc/#Misc.fiatnames","page":"Misc","title":"Misc.fiatnames","text":"A list of fiat and fiat-like assets names.\n\n\n\n\n\n","category":"constant"},{"location":"misc/#Misc.futures_exchange","page":"Misc","title":"Misc.futures_exchange","text":"Some exchanges are split into different classes in ccxt.\n\n\n\n\n\n","category":"constant"},{"location":"misc/#Misc.ohlcv_limits","page":"Misc","title":"Misc.ohlcv_limits","text":"Exchange ohlcv candles limits.\n\n\n\n\n\n","category":"constant"},{"location":"misc/#Misc.results","page":"Misc","title":"Misc.results","text":"Holds recently evaluated statements.\n\n\n\n\n\n","category":"constant"},{"location":"misc/#Misc.tf_win","page":"Misc","title":"Misc.tf_win","text":"Mapping of timeframes to default window sizes.\n\n\n\n\n\n","category":"constant"},{"location":"misc/#Misc.Config","page":"Misc","title":"Misc.Config","text":"The config main structure:\n\nwindow: The default number of candles (OHLCV).\ntimeframe: The default timeframe of the candles.\nqc: The default quote currency.\nmargin: If margin is enabled, only margin pairs are considered.\nleverage:\n:yes : leveraged pairs will not be filtered.\n:only : ONLY leveraged will not be filtered.\n:from : Selects non leveraged pairs, that also have a leveraged siblings.\nfutures: Selects the futures version of an Exchange.\nslope/min/max: Used in Analysios/slope.\nct: Used in Analysis/corr.\nattrs: Generic metadata container.\n\n\n\n\n\n","category":"type"},{"location":"misc/#Misc._empty_df-Tuple{}","page":"Misc","title":"Misc._empty_df","text":"An empty OHLCV dataframe.\n\n\n\n\n\n","category":"method"},{"location":"misc/#Misc._from_to_dt-Tuple{AbstractString, Any, Any}","page":"Misc","title":"Misc._from_to_dt","text":"Converts integers to relative datetimes according to timeframe duration.\n\n\n\n\n\n","category":"method"},{"location":"misc/#Misc._instantiate_workers-Tuple{Any}","page":"Misc","title":"Misc._instantiate_workers","text":"Instantiate new workers if the current number mismatches the requested one.\n\n\n\n\n\n","category":"method"},{"location":"misc/#Misc.clearpypath!-Tuple{}","page":"Misc","title":"Misc.clearpypath!","text":"Remove wrong python version libraries dirs from python loading path.\n\n\n\n\n\n","category":"method"},{"location":"misc/#Misc.config_path-Tuple{}","page":"Misc","title":"Misc.config_path","text":"The config path (TOML), relative to the current project directory.\n\n\n\n\n\n","category":"method"},{"location":"misc/#Misc.loadconfig-Tuple{Any}","page":"Misc","title":"Misc.loadconfig","text":"Parses the toml file and populates the global config.\n\n\n\n\n\n","category":"method"},{"location":"misc/#Misc.printn","page":"Misc","title":"Misc.printn","text":"Print a (currency) number.\n\n\n\n\n\n","category":"function"},{"location":"misc/#Misc.resetconfig!-Tuple{}","page":"Misc","title":"Misc.resetconfig!","text":"Reset global config to default values.\n\n\n\n\n\n","category":"method"},{"location":"misc/#Misc.setcfg!-Tuple{Any, Any}","page":"Misc","title":"Misc.setcfg!","text":"Sets a single config value.\n\n\n\n\n\n","category":"method"},{"location":"misc/#Misc.@ifundef","page":"Misc","title":"Misc.@ifundef","text":"Define a new symbol with given value if it is not already defined.\n\n\n\n\n\n","category":"macro"},{"location":"misc/#Misc.@lev!-Tuple{}","page":"Misc","title":"Misc.@lev!","text":"Toggle config leverage flag\n\n\n\n\n\n","category":"macro"},{"location":"misc/#Misc.@margin!-Tuple{}","page":"Misc","title":"Misc.@margin!","text":"Toggle config margin flag.\n\n\n\n\n\n","category":"macro"},{"location":"misc/#Misc.@pymodule","page":"Misc","title":"Misc.@pymodule","text":"Import a python module over a variable defined in global scope.\n\n\n\n\n\n","category":"macro"},{"location":"misc/#Progress-bar","page":"Misc","title":"Progress bar","text":"","category":"section"},{"location":"misc/","page":"Misc","title":"Misc","text":"Modules = [Pbar]","category":"page"},{"location":"misc/#Pbar.Pbar","page":"Misc","title":"Pbar.Pbar","text":"Python enlighten progressbar wrapper.\n\n\n\n\n\n","category":"module"},{"location":"misc/#Pbar.pbclose-Tuple{Any}","page":"Misc","title":"Pbar.pbclose","text":"Terminates the progress bar.\n\n\n\n\n\n","category":"method"},{"location":"misc/#Pbar.@pbar!","page":"Misc","title":"Pbar.@pbar!","text":"Instantiate a progress bar:\n\ndata: length(data) determines the bar total\nunit: what unit the display\ndesc: description will appear over the progressbar\n\n\n\n\n\n","category":"macro"},{"location":"misc/#Pbar.@pbupdate!","page":"Misc","title":"Pbar.@pbupdate!","text":"Single update to the progressbar with the new value.\n\n\n\n\n\n","category":"macro"},{"location":"engine/#Engine","page":"Engine","title":"Engine","text":"","category":"section"},{"location":"engine/","page":"Engine","title":"Engine","text":"Modules = [Backtest.Engine]","category":"page"},{"location":"analysis/#Analysis","page":"Analysis","title":"Analysis","text":"","category":"section"},{"location":"analysis/","page":"Analysis","title":"Analysis","text":"Modules = [Backtest.Analysis]","category":"page"},{"location":"analysis/#Analysis.fltsummary-Tuple{AbstractVector{Tuple{AbstractFloat, Misc.PairData}}}","page":"Analysis","title":"Analysis.fltsummary","text":"Return the summary of a filtered vector of pairdata.\n\n\n\n\n\n","category":"method"},{"location":"analysis/#Analysis.mark!-Tuple{}","page":"Analysis","title":"Analysis.mark!","text":"Loads the Mark module.\n\n\n\n\n\n","category":"method"},{"location":"analysis/#Base.filter-Tuple{Function, AbstractDict, Real, Real}","page":"Analysis","title":"Base.filter","text":"Filters a list of pairs using a predicate function. The predicate functions must return a Real number which will be used for sorting.\n\n\n\n\n\n","category":"method"},{"location":"analysis/","page":"Analysis","title":"Analysis","text":"Modules = [Backtest.Analysis]\nPages = [\"src/short.jl\"]","category":"page"},{"location":"analysis/","page":"Analysis","title":"Analysis","text":"Modules = [Backtest.Analysis]\nPages = [\"corr.jl\"]","category":"page"},{"location":"data/#Data","page":"Data","title":"Data","text":"","category":"section"},{"location":"data/","page":"Data","title":"Data","text":"Modules = [Backtest.Data]","category":"page"},{"location":"data/#Data.ZarrInstance","page":"Data","title":"Data.ZarrInstance","text":"Candles data is stored with hierarchy PAIR -> [TIMEFRAMES...]. A pair is a ZGroup, a timeframe is a ZArray.\n\n\n\n\n\n","category":"type"},{"location":"data/#Data.combine_data-Tuple{Any, Any}","page":"Data","title":"Data.combine_data","text":"combinerows of two (OHLCV) dataframes over using :timestamp column as index.\n\n\n\n\n\n","category":"method"},{"location":"data/#Data.combinerows-Tuple{Any, Any}","page":"Data","title":"Data.combinerows","text":"(Right)Merge two dataframes on key, assuming the key is ordered and unique in both dataframes.\n\n\n\n\n\n","category":"method"},{"location":"data/#Data.contiguous_ts-Tuple{Any, AbstractString}","page":"Data","title":"Data.contiguous_ts","text":"Checks if a timeseries has any intervals not conforming to the given timeframe.\n\n\n\n\n\n","category":"method"},{"location":"data/#Data.data_td-Tuple{Any}","page":"Data","title":"Data.data_td","text":"The time interval of the dataframe, guesses from the difference between the first two rows.\n\n\n\n\n\n","category":"method"},{"location":"data/#Data.load_pair","page":"Data","title":"Data.load_pair","text":"Load a pair ohlcv data from storage. as_z: returns the ZArray\n\n\n\n\n\n","category":"function"},{"location":"data/#Data.load_pairs-NTuple{4, Any}","page":"Data","title":"Data.load_pairs","text":"Load data from given zarr instance, exchange, pairs list and timeframe.\n\n\n\n\n\n","category":"method"},{"location":"data/#Data.pair_key-Tuple{Any, Any, Any}","page":"Data","title":"Data.pair_key","text":"The full key of the data stored for the (exchange, pair, timeframe) combination.\n\n\n\n\n\n","category":"method"},{"location":"data/#Data.save_pair-Tuple{Data.ZarrInstance, Any, Any, Any, Any}","page":"Data","title":"Data.save_pair","text":"data_col: the timestamp column of the new data (1) saved_col: the timestamp column of the existing data (1) kind: what type of trading data it is, (ohlcv or trades) pair: the trading pair (BASE/QUOTE string) timeframe: exchange timeframe (from exc.timeframes) type: Primitive type used for storing the data (Float64)\n\n\n\n\n\n","category":"method"},{"location":"data/#Data.to_df-Tuple{Any}","page":"Data","title":"Data.to_df","text":"Convert ccxt OHLCV data to a timearray/dataframe.\n\n\n\n\n\n","category":"method"},{"location":"data/#Data.@as_mat-Tuple{Any}","page":"Data","title":"Data.@as_mat","text":"Redefines given variable to a Matrix with type of the underlying container type.\n\n\n\n\n\n","category":"macro"},{"location":"data/#Data.@to_mat","page":"Data","title":"Data.@to_mat","text":"Same as as_mat but returns the new matrix.\n\n\n\n\n\n","category":"macro"},{"location":"data/#Prices","page":"Data","title":"Prices","text":"","category":"section"},{"location":"data/","page":"Data","title":"Data","text":"Modules = [Prices]","category":"page"},{"location":"data/#Main.Prices.gprofit","page":"Data","title":"Main.Prices.gprofit","text":"Total profit of a ladder of trades\n\n\n\n\n\n","category":"function"},{"location":"data/#Main.Prices.price_ranges","page":"Data","title":"Main.Prices.price_ranges","text":"Given a price, output price at given ratios. (Predefined ratios - :bal,:futures,:tight,:expa)\n\n\n\n\n\n","category":"function"},{"location":"data/#Main.Prices.price_ranges-Tuple{AbstractDict, Vararg{Any}}","page":"Data","title":"Main.Prices.price_ranges","text":"Get the price range of a map of pairs, using the last available close price.\n\n\n\n\n\n","category":"method"},{"location":"plotting/#Plotting","page":"Plotting","title":"Plotting","text":"","category":"section"},{"location":"plotting/","page":"Plotting","title":"Plotting","text":"Plotting module is based on (py)echarts.","category":"page"},{"location":"plotting/","page":"Plotting","title":"Plotting","text":"Modules = [Backtest.Plotting]","category":"page"},{"location":"plotting/#Plotting._plotone-Tuple{Misc.PairData}","page":"Plotting","title":"Plotting._plotone","text":"OHLCV plot with bbands and alma indicators.\n\n\n\n\n\n","category":"method"},{"location":"plotting/#Plotting.countdf-Tuple{DataFrames.AbstractDataFrame}","page":"Plotting","title":"Plotting.countdf","text":"Bincount dataframe\n\n\n\n\n\n","category":"method"},{"location":"plotting/#Plotting.heatmap","page":"Plotting","title":"Plotting.heatmap","text":"Heatmap of between two series.\n\n\n\n\n\n","category":"function"},{"location":"plotting/#Plotting.init_pyecharts","page":"Plotting","title":"Plotting.init_pyecharts","text":"Loads pyecharts python module.\n\n\n\n\n\n","category":"function"},{"location":"plotting/#Plotting.plotgrid","page":"Plotting","title":"Plotting.plotgrid","text":"Plots ohlcv data overlaying indicators inds and inds2.\n\n\n\n\n\n","category":"function"},{"location":"plotting/#Plotting.plotscatter3d-Tuple{Any}","page":"Plotting","title":"Plotting.plotscatter3d","text":"Scatter plot only the end of a dataframe given from tail.\n\n\n\n\n\n","category":"method"},{"location":"plotting/#Plotting.@chart-Tuple{Any, Vararg{Any}}","page":"Plotting","title":"Plotting.@chart","text":"Initializes pyechart chart class.\n\n\n\n\n\n","category":"macro"},{"location":"plotting/#Plotting.@df_dates_data-Tuple{}","page":"Plotting","title":"Plotting.@df_dates_data","text":"Set dates and ohlc data from dataframe columns.\n\n\n\n\n\n","category":"macro"},{"location":"#Backtest-docs","page":"Backtest docs","title":"Backtest docs","text":"","category":"section"},{"location":"","page":"Backtest docs","title":"Backtest docs","text":"This backtest framework is comprised of different modules:","category":"page"},{"location":"","page":"Backtest docs","title":"Backtest docs","text":"Engine: The actual backtest engine (to be built).\nExchanges: Loads exchanges instances, markets and pairlists, based on ccxt.\nData: Loading and saving ohlcv data (and more), based Zarr.\nPlotting: Output plots for ohlcv data and indicators, based on pyecharts.\nAnalysis: The bulk of indicators evaluation, depends of a bunch of (heavy) julia libraries like CausalityTools and Indicators.\nMisc: Ancillary stuff, like configuration, and some UI bits.","category":"page"}]
}
