name: run-tests

on:
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false
jobs:
  test:
    runs-on: ubuntu-latest
    env:
      JULIA_VERSION: 1
    steps:
    - uses: actions/checkout@v2
    - name: restore cache
      uses: actions/cache/restore@v3
      id: julia-cache
      with:
        path: |
          ~/.julia
          .conda
          PingPongDev/.CondaPkg/env
        key: ${{ runner.os }}-julia-${{ env.JULIA_VERSION }}-test-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-julia-${{ env.JULIA_VERSION }}-test-
    - name: Set up Julia
      uses: julia-actions/setup-julia@v1
      with:
        version: ${{ env.JULIA_VERSION }}
        include-all-prereleases: true
    - name: Setup tmate session
      env:
        PINGPONG_BYBIT_SANDBOX_APIKEY: ${{ secrets.PINGPONG_BYBIT_SANDBOX_APIKEY }}
        PINGPONG_BYBIT_SANDBOX_SECRET: ${{ secrets.PINGPONG_BYBIT_SANDBOX_SECRET }}
        PINGPONG_BYBIT_SANDBOX_PASSWORD: ${{ secrets.PINGPONG_BYBIT_SANDBOX_PASSWORD }}
        PINGPONG_PHEMEX_SANDBOX_APIKEY: ${{ secrets.PINGPONG_PHEMEX_SANDBOX_APIKEY }}
        PINGPONG_PHEMEX_SANDBOX_SECRET: ${{ secrets.PINGPONG_PHEMEX_SANDBOX_SECRET }}
        PINGPONG_PHEMEX_SANDBOX_PASSWORD: ${{ secrets.PINGPONG_PHEMEX_SANDBOX_PASSWORD }}
      uses: mxschmitt/action-tmate@v3
      if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
    - name: Install dependencies
      run: |
        git submodule init; git submodule update
        sudo apt-get install -y xauth direnv
        direnv allow .
        eval "$(direnv hook bash)"
        julia --project=PingPongDev/ -e 'import Pkg; Pkg.update(); Pkg.resolve(); Pkg.instantiate(); using PingPongDev;'
    - name: Process coverage
      uses: julia-actions/julia-processcoverage@v1
      with:
        file: lcov.info
        directories: TimeTicks,Optimization,LiveMode,Instruments,Simulations,Plotting,Stats,Engine,Python,Stubs,Executors,PingPong,Scrapers,Pbar,Misc,OrderTypes,Analysis,Lang,Ccxt,ExchangeTypes,Exchanges,Instances,PaperMode,Strategies,Data,Watchers,SimMode,Remote,Processing,Collections,Fetch,PingPongDev
        # Cli,PingPongDev,PingPongInteractive,Zarr,Temporal
    - name: Run tests
      env:
        PINGPONG_BYBIT_SANDBOX_APIKEY: ${{ secrets.PINGPONG_BYBIT_SANDBOX_APIKEY }}
        PINGPONG_BYBIT_SANDBOX_SECRET: ${{ secrets.PINGPONG_BYBIT_SANDBOX_SECRET }}
        PINGPONG_BYBIT_SANDBOX_PASSWORD: ${{ secrets.PINGPONG_BYBIT_SANDBOX_PASSWORD }}
        PINGPONG_PHEMEX_SANDBOX_APIKEY: ${{ secrets.PINGPONG_PHEMEX_SANDBOX_APIKEY }}
        PINGPONG_PHEMEX_SANDBOX_SECRET: ${{ secrets.PINGPONG_PHEMEX_SANDBOX_SECRET }}
        PINGPONG_PHEMEX_SANDBOX_PASSWORD: ${{ secrets.PINGPONG_PHEMEX_SANDBOX_PASSWORD }}
      run: |
        direnv allow .
        eval "$(direnv hook bash)"
        julia --project=PingPongDev/ -e 'import Pkg; Pkg.test()'
    - name: Process coverage
      uses: julia-actions/julia-processcoverage@v1
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      if: always()
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    - name: Save Cache
      uses: actions/cache/save@v3
      if: always()
      with:
        path: |
          ~/.julia
          .conda
          PingPongDev/.CondaPkg/env
        key: ${{ runner.os }}-julia-${{ env.JULIA_VERSION }}-test-${{ github.sha }}
